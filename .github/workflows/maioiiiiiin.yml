name: RDP Gaming Server Windows Server 2025 Small SSD

on:
  workflow_dispatch:

jobs:
  secure-rdp-smallssd:
    runs-on: windows-2025
    timeout-minutes: 50400 # ~35 zile

    steps:
      - name: Simulare configurare hardware
        run: |
          Write-Host "Simulare configurare: 16GB RAM, 100GB SSD total, ~20-30GB ocupat de OS în Windows Server 2025"

      - name: Verificare versiune Windows
        run: |
          $version = (Get-CimInstance Win32_OperatingSystem).Caption
          Write-Host "Versiune Windows: $version"
          if ($version -notlike "*Server 2025*") {
            Write-Warning "ATENȚIE: Nu este Windows Server 2025 oficial."
          }

      - name: Optimizare spatiu si performanta OS
        run: |
          Set-Service -Name WSearch -StartupType Disabled
          Stop-Service -Name WSearch
          Set-Service -Name SysMain -StartupType Disabled
          Stop-Service -Name SysMain
          powercfg -h off
          Remove-Item -Path "$env:SystemRoot\Temp\*" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "$env:TEMP\*" -Recurse -Force -ErrorAction SilentlyContinue
          cleanmgr /sagerun:1

      - name: Activeaza Remote Desktop si firewall
        run: |
          Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale" -ErrorAction SilentlyContinue
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Creaza userii RTXuser si runneradmin fara parola
        run: |
          # Sterge userii dacă există deja
          foreach ($user in @("RTXuser", "runneradmin")) {
            if(Get-LocalUser -Name $user -ErrorAction SilentlyContinue) {
              Remove-LocalUser -Name $user
            }
          }

          # Creeaza userii fara parola
          New-LocalUser -Name "RTXuser" -NoPassword -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RTXuser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RTXuser"

          New-LocalUser -Name "runneradmin" -NoPassword -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "runneradmin"

          echo "RDP_USERS=RTXuser, runneradmin" >> $env:GITHUB_ENV
          echo "RDP_PASSWORDS= (fara parola)" >> $env:GITHUB_ENV

      - name: Optimizeaza Windows pentru gaming
        run: |
          Set-ItemProperty 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects' -Name 'VisualFXSetting' -Value 2
          powercfg /setactive SCHEME_MIN
          rundll32.exe timerapi.dll,SetTimerResolution 1000,1

      - name: Instaleaza Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Conecteaza Tailscale cu auth key
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-server-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retry = 0
          while (-not $tsIP -and $retry -lt 10) {
            Start-Sleep -Seconds 5
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            $retry++
          }
          if (-not $tsIP) {
            Write-Error "Nu s-a asignat IP Tailscale!"
            exit 1
          }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Afiseaza datele de conectare RDP
        run: |
          Write-Host "=== INFORMATII ACCES RDP ==="
          Write-Host "IP Tailscale: $env:TAILSCALE_IP"
          Write-Host "Useri: RTXuser, runneradmin"
          Write-Host "Parole: (fara parola)"
          Write-Host "============================"

      - name: Pastreaza workflow-ul activ 35 zile
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] Server RDP ruleaza. Conecteaza-te prin IP Tailscale."
            Start-Sleep -Seconds 300
          }
          
